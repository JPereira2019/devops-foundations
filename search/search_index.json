{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenido a los documentos del curso devops foundations Contenido DevOps What is DevOps The Force Enemy TOIL Jedis, The Developer way: What is the path to follow to become DevOps for a dev Sith, The Sysadmin way: What is the path to follow to become DevOps for sysadmins Not all the Clouds looks like animals: Core concepts about the cloud, the difference between IAS, PAAS, SAAS Servers Pets vs Cattle SLA, SLO Devops KPI Infra As Code Infrastructure as code Bootstrapping Configuration Management PAAS as code As code for real Design for Failure - Cloud-Ready Architectures 12-factor apps Microservices HA CAP, Data Consistency Enterprise Service Bus Broker Pattern MVC Pattern Peer2Peer Pattern Blackboard Pattern Service Configuration Manager Caos Engineering Service Discovery Monitoring and Reliability Blackbox monitoring Core Metrics Service Metrics Custom Service metrics Code Instrumentation Log Analysis Runbooks/Automation No Blame Policy postmortem Practice Continuous Improvement Continuous Integration - Continuous Delivery Continuous Integration Continuous Delivery Continuous Deployment Assets Management Code Quality Gate Automation and Delivery Tools Deployments Patterns Blue/Green, Canary Designed to scale Load Testing Bottleneck detection Key Metrics Detection Complex Scale events License Copyright 2019 Douglas Lopez Copyright 2019 Web y Movil, S. A. Guatemala. Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Home"},{"location":"#bienvenido-a-los-documentos-del-curso-devops-foundations","text":"","title":"Bienvenido a los documentos del curso devops foundations"},{"location":"#contenido","text":"DevOps What is DevOps The Force Enemy TOIL Jedis, The Developer way: What is the path to follow to become DevOps for a dev Sith, The Sysadmin way: What is the path to follow to become DevOps for sysadmins Not all the Clouds looks like animals: Core concepts about the cloud, the difference between IAS, PAAS, SAAS Servers Pets vs Cattle SLA, SLO Devops KPI Infra As Code Infrastructure as code Bootstrapping Configuration Management PAAS as code As code for real Design for Failure - Cloud-Ready Architectures 12-factor apps Microservices HA CAP, Data Consistency Enterprise Service Bus Broker Pattern MVC Pattern Peer2Peer Pattern Blackboard Pattern Service Configuration Manager Caos Engineering Service Discovery Monitoring and Reliability Blackbox monitoring Core Metrics Service Metrics Custom Service metrics Code Instrumentation Log Analysis Runbooks/Automation No Blame Policy postmortem Practice Continuous Improvement Continuous Integration - Continuous Delivery Continuous Integration Continuous Delivery Continuous Deployment Assets Management Code Quality Gate Automation and Delivery Tools Deployments Patterns Blue/Green, Canary Designed to scale Load Testing Bottleneck detection Key Metrics Detection Complex Scale events","title":"Contenido"},{"location":"#license","text":"Copyright 2019 Douglas Lopez Copyright 2019 Web y Movil, S. A. Guatemala. Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"License"},{"location":"Infrastructure-as-Code/01-cvs-git/","text":"Git demo y Laboratorio Prerrequisitos Instalacion de git en el sistema Tutorial de Instalacion Una cuenta de github configurada Configuracion de cuenta de Git Laboratorio-Git Antes de Usar git para este laboratorio, necesita configurar su cuenta de git utilizando el siguiente comando git config --global user.name \" Nombre de Usuario \" Agregue a la configuraci\u00f3n de git su direcci\u00f3n de correo git config --global user.email \" Micorreo@midominio.com \" Ingrese a su cuenta de git https://github.com Ingrese al link de este repositorio Repo URL Haga click en \"Fork\" para crear una copia de este repositorio dentro de su cuenta de Github. Haga clic en \"Clone or Download\" para obtener la direcci\u00f3n de https para el repositorio recientemente creado. Clone el repositorio usando el comando git clone HTTPS URL del paso previo Ingrese al directorio donde ha clonado el repositorio y use el comando ls -la Observe el directorio .git este directorio contiene toda la informaci\u00f3n del control de versiones, esta es su copia local del mismo. Corra el comando git log y podr\u00e1 observar el historial de todos los cambios Corra el comando git remote para ver la lista de repositorios remotos asociados a su copia local Corra el comando git remote -v para ver informaci\u00f3n m\u00e1s detallada acerca de el repositorio remoto Cree un nuevo archivo mi_archivo.txt . y el comando echo \"este es un archivo nuevo\" mi_archivo.txt Con el comando git status puede ver el estado actual de su repositorio el archivo mi_archivo.txt aparecer como untracked Agregue su archivo al cvs con el comando git add mi_archivo.txt Corra el comando git commit para agregar sus cambios al repositorio estos cambios estaran almacenados solamente en su copia local Para agregar sus cambios al repositorio remoto corra el comando git push origin master Verifique en su cuenta de github si el cambio se ve reflejado en el repositorio","title":"Git demo y Laboratorio"},{"location":"Infrastructure-as-Code/01-cvs-git/#git-demo-y-laboratorio","text":"","title":"Git demo y Laboratorio"},{"location":"Infrastructure-as-Code/01-cvs-git/#prerrequisitos","text":"Instalacion de git en el sistema Tutorial de Instalacion Una cuenta de github configurada Configuracion de cuenta de Git","title":"Prerrequisitos"},{"location":"Infrastructure-as-Code/01-cvs-git/#laboratorio-git","text":"Antes de Usar git para este laboratorio, necesita configurar su cuenta de git utilizando el siguiente comando git config --global user.name \" Nombre de Usuario \" Agregue a la configuraci\u00f3n de git su direcci\u00f3n de correo git config --global user.email \" Micorreo@midominio.com \" Ingrese a su cuenta de git https://github.com Ingrese al link de este repositorio Repo URL Haga click en \"Fork\" para crear una copia de este repositorio dentro de su cuenta de Github. Haga clic en \"Clone or Download\" para obtener la direcci\u00f3n de https para el repositorio recientemente creado. Clone el repositorio usando el comando git clone HTTPS URL del paso previo Ingrese al directorio donde ha clonado el repositorio y use el comando ls -la Observe el directorio .git este directorio contiene toda la informaci\u00f3n del control de versiones, esta es su copia local del mismo. Corra el comando git log y podr\u00e1 observar el historial de todos los cambios Corra el comando git remote para ver la lista de repositorios remotos asociados a su copia local Corra el comando git remote -v para ver informaci\u00f3n m\u00e1s detallada acerca de el repositorio remoto Cree un nuevo archivo mi_archivo.txt . y el comando echo \"este es un archivo nuevo\" mi_archivo.txt Con el comando git status puede ver el estado actual de su repositorio el archivo mi_archivo.txt aparecer como untracked Agregue su archivo al cvs con el comando git add mi_archivo.txt Corra el comando git commit para agregar sus cambios al repositorio estos cambios estaran almacenados solamente en su copia local Para agregar sus cambios al repositorio remoto corra el comando git push origin master Verifique en su cuenta de github si el cambio se ve reflejado en el repositorio","title":"Laboratorio-Git"},{"location":"Infrastructure-as-Code/02-terraform/","text":"IAC Terraform Lab Prerrequisitos Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation con terraform instalado Acceso a una cuenta de AWS Un editor de texto de su preferencia Inicio de sesion en servidor ec2-3-234-154-133.compute-1.amazonaws.com usuario ec2-user Creacion de un servidor en amazon ec2 usando terraform Ingrese en su workstation con la ultima version del codigo Ingrese a la carpeta cd iac-terraform1 Examine la sintaxis del codigo Para iniciar terraform corra el comando terraform init Verifique los cambios que realizara su script corriendo terraform plan Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Si todo esta bien deberia ver una salida similar a esta Plan: 4 to add, 0 to change, 0 to destroy. Cree la instancia usando el comando terraform apply Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Ingrese yes para crear los recursos o you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes","title":"IAC Terraform Lab"},{"location":"Infrastructure-as-Code/02-terraform/#iac-terraform-lab","text":"","title":"IAC Terraform Lab"},{"location":"Infrastructure-as-Code/02-terraform/#prerrequisitos","text":"Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation con terraform instalado Acceso a una cuenta de AWS Un editor de texto de su preferencia","title":"Prerrequisitos"},{"location":"Infrastructure-as-Code/02-terraform/#inicio-de-sesion-en-servidor","text":"ec2-3-234-154-133.compute-1.amazonaws.com usuario ec2-user","title":"Inicio de sesion en servidor"},{"location":"Infrastructure-as-Code/02-terraform/#creacion-de-un-servidor-en-amazon-ec2-usando-terraform","text":"Ingrese en su workstation con la ultima version del codigo Ingrese a la carpeta cd iac-terraform1 Examine la sintaxis del codigo Para iniciar terraform corra el comando terraform init Verifique los cambios que realizara su script corriendo terraform plan Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Si todo esta bien deberia ver una salida similar a esta Plan: 4 to add, 0 to change, 0 to destroy. Cree la instancia usando el comando terraform apply Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Ingrese yes para crear los recursos o you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes","title":"Creacion de un servidor en amazon ec2 usando terraform"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/","text":"IAC Terraform Lab Prerrequisitos Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation con terraform instalado conectarse ssh Ultima version del codigo de laboratorio actualizar codigo Un editor de texto de su preferencia Objetivo El objetivo de este laboratorio es instalar los paquetes ansible, docker, y git en un servidor nuevo haciendo bootstraping agregando el parametro userdata a terraform Creacion de un servidor en amazon ec2 usando terraform Edicion de codigo Ingrese en su workstation con la ultima version del codigo Examine la sintaxis del codigo puede user visual studio code pare ello Verifique la sintaxis del objeto template Verifique la sintaxis del objeto ec2-instance Edite su archivo para cumplir la sintaxis puede usar su copia local y visual studio code para hacer mas simple la visualizacion y la edicion del codigo, trate de escribir el codigo usted. Compare su resultado con el resultado en respuestas /answers/terraform-boostrap y corrija lo necesario Ejecutar Terraform para crear el servidor Para iniciar terraform corra el comando terraform init Verifique los cambios que realizara su script corriendo terraform plan Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Si todo esta bien deberia ver una salida similar a esta Plan: 4 to add, 0 to change, 0 to destroy. Cree la instancia usando el comando terraform apply Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Ingrese yes para crear los recursos o you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes","title":"IAC Terraform Lab"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#iac-terraform-lab","text":"","title":"IAC Terraform Lab"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#prerrequisitos","text":"Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation con terraform instalado conectarse ssh Ultima version del codigo de laboratorio actualizar codigo Un editor de texto de su preferencia","title":"Prerrequisitos"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#objetivo","text":"El objetivo de este laboratorio es instalar los paquetes ansible, docker, y git en un servidor nuevo haciendo bootstraping agregando el parametro userdata a terraform","title":"Objetivo"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#creacion-de-un-servidor-en-amazon-ec2-usando-terraform","text":"","title":"Creacion de un servidor en amazon ec2 usando terraform"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#edicion-de-codigo","text":"Ingrese en su workstation con la ultima version del codigo Examine la sintaxis del codigo puede user visual studio code pare ello Verifique la sintaxis del objeto template Verifique la sintaxis del objeto ec2-instance Edite su archivo para cumplir la sintaxis puede usar su copia local y visual studio code para hacer mas simple la visualizacion y la edicion del codigo, trate de escribir el codigo usted. Compare su resultado con el resultado en respuestas /answers/terraform-boostrap y corrija lo necesario","title":"Edicion de codigo"},{"location":"Infrastructure-as-Code/03-terraform-bootstrap/#ejecutar-terraform-para-crear-el-servidor","text":"Para iniciar terraform corra el comando terraform init Verifique los cambios que realizara su script corriendo terraform plan Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Si todo esta bien deberia ver una salida similar a esta Plan: 4 to add, 0 to change, 0 to destroy. Cree la instancia usando el comando terraform apply Ingrese su nombre como nombre de instancia var.name Enter a value: dlopez Ingrese yes para crear los recursos o you want to perform these actions? Terraform will perform the actions described above. Only 'yes' will be accepted to approve. Enter a value: yes","title":"Ejecutar Terraform para crear el servidor"},{"location":"Infrastructure-as-Code/04-ansible-playbook/","text":"IAC Configuration Management Ansible Prerrequisitos Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation conectarse ssh Ultima version del codigo de laboratorio actualizar codigo EL servidor creado en el laboratorio anterior terraform iac 2 Objetivo El objetivo de este laboratorio es utilizar un configuration management como ansible para realizar tareas dentro de un servidor Uso de Ansible Connecion al servidor Ingrese en a la workstation usando el usuario ec2-user Conectese a la instancia creada en el ejercicio anterior consulte el IP al instructor ssh -i \"demo.pem\" ec2-user@ IP Clone el repositorio corriendo el comando git clone https://github.com/DouglasLopez/devops-foundations.git Cambie al directorio del ejercicio 3 corriendo cd devops-foundations/source/infrastructure-as-code/ansible3/ Verifique que ansible esta instalado y funcionando corriendo ansible --version Corra el playbook de ansible con el comando ansible-playbook ansible-playbook ansible-playbook.yml Verifique la instalacion de docker corriendo el comando docker --version y docker ps","title":"IAC Configuration Management Ansible"},{"location":"Infrastructure-as-Code/04-ansible-playbook/#iac-configuration-management-ansible","text":"","title":"IAC Configuration Management Ansible"},{"location":"Infrastructure-as-Code/04-ansible-playbook/#prerrequisitos","text":"Para realizar este laboratorio usted necesita: Conocimiento de utilizacion de git si no lo tiene verifique el laboratorio cvs-git Workstation conectarse ssh Ultima version del codigo de laboratorio actualizar codigo EL servidor creado en el laboratorio anterior terraform iac 2","title":"Prerrequisitos"},{"location":"Infrastructure-as-Code/04-ansible-playbook/#objetivo","text":"El objetivo de este laboratorio es utilizar un configuration management como ansible para realizar tareas dentro de un servidor","title":"Objetivo"},{"location":"Infrastructure-as-Code/04-ansible-playbook/#uso-de-ansible","text":"","title":"Uso de Ansible"},{"location":"Infrastructure-as-Code/04-ansible-playbook/#connecion-al-servidor","text":"Ingrese en a la workstation usando el usuario ec2-user Conectese a la instancia creada en el ejercicio anterior consulte el IP al instructor ssh -i \"demo.pem\" ec2-user@ IP Clone el repositorio corriendo el comando git clone https://github.com/DouglasLopez/devops-foundations.git Cambie al directorio del ejercicio 3 corriendo cd devops-foundations/source/infrastructure-as-code/ansible3/ Verifique que ansible esta instalado y funcionando corriendo ansible --version Corra el playbook de ansible con el comando ansible-playbook ansible-playbook ansible-playbook.yml Verifique la instalacion de docker corriendo el comando docker --version y docker ps","title":"Connecion al servidor"},{"location":"Infrastructure-as-Code/05-docker-crear-swarm/","text":"Configuration de Swarm Manager Desde la terminal del servidor con el usuario ec2-user connectese a una de las maquinas, este sera el docker swarm mananger ssh -i \"demo.pem\" ec2-user@ IP Cambiese al usuario root con el comando sudo -i Verifique que el servicio de docker este corriendo service docker status la salida debera ser similar a la siguiente docker (pid 14173) is running... Si el servicio no esta corriendo inicielo con el comando service docker start Inicie el swarm manager con el comando docker swarm init Obtenga el comando para unir nodos a docker swarm corriendo docker swarm join-token worker Copie el resultado y guardelo Agregar un nodo worker Desde la terminal del servidor con el usuario ec2-user connectese a una de las maquinas, este sera el docker swarm worker ssh -i \"demo.pem\" ec2-user@ IP Cambiese al usuario root con el comando sudo -i Verifique que el servicio de docker este corriendo service docker status docker (pid 14173) is running... Si el servicio no esta corriendo inicielo con el comando service docker start Una el nodo al docker swarm correindo el comando copiado en la seccion anterior Verficacion Corra el comando docker node ls debera mostrarle dos contenedores como miembros del cluster Instalacion de portainer Portainer es una UI para poder ver el estado del cluster de docker para instalarla corra el comando docker service create --name portainer_agent --network portainer_agent_network --publish mode=host,target=8000,published=8000 -e AGENT_CLUSTER_ADDR=tasks.portainer_agent --mode global --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock --mount type=bind,src=//var/lib/docker/volumes,dst=/var/lib/docker/volumes \u2013-mount type=bind,src=/,dst=/host portainer/agent Puede verificar la instalacion en la dirrecion de su balancer https:// :8000","title":"05 docker crear swarm"},{"location":"Infrastructure-as-Code/05-docker-crear-swarm/#configuration-de-swarm-manager","text":"Desde la terminal del servidor con el usuario ec2-user connectese a una de las maquinas, este sera el docker swarm mananger ssh -i \"demo.pem\" ec2-user@ IP Cambiese al usuario root con el comando sudo -i Verifique que el servicio de docker este corriendo service docker status la salida debera ser similar a la siguiente docker (pid 14173) is running... Si el servicio no esta corriendo inicielo con el comando service docker start Inicie el swarm manager con el comando docker swarm init Obtenga el comando para unir nodos a docker swarm corriendo docker swarm join-token worker Copie el resultado y guardelo","title":"Configuration de Swarm Manager"},{"location":"Infrastructure-as-Code/05-docker-crear-swarm/#agregar-un-nodo-worker","text":"Desde la terminal del servidor con el usuario ec2-user connectese a una de las maquinas, este sera el docker swarm worker ssh -i \"demo.pem\" ec2-user@ IP Cambiese al usuario root con el comando sudo -i Verifique que el servicio de docker este corriendo service docker status docker (pid 14173) is running... Si el servicio no esta corriendo inicielo con el comando service docker start Una el nodo al docker swarm correindo el comando copiado en la seccion anterior","title":"Agregar un nodo worker"},{"location":"Infrastructure-as-Code/05-docker-crear-swarm/#verficacion","text":"Corra el comando docker node ls debera mostrarle dos contenedores como miembros del cluster","title":"Verficacion"},{"location":"Infrastructure-as-Code/05-docker-crear-swarm/#instalacion-de-portainer","text":"Portainer es una UI para poder ver el estado del cluster de docker para instalarla corra el comando docker service create --name portainer_agent --network portainer_agent_network --publish mode=host,target=8000,published=8000 -e AGENT_CLUSTER_ADDR=tasks.portainer_agent --mode global --mount type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock --mount type=bind,src=//var/lib/docker/volumes,dst=/var/lib/docker/volumes \u2013-mount type=bind,src=/,dst=/host portainer/agent Puede verificar la instalacion en la dirrecion de su balancer https:// :8000","title":"Instalacion de portainer"},{"location":"Infrastructure-as-Code/Conectarse-ssh/","text":"Conecion a SSH usando gitbash Ingrese a gitbash en su instalacion local Ingrese el comando ssh ec2-user@3.234.154.133 para conectarse a la instancia de laboratorio Ingrese el password compartido Cambie a su usuario ejemplo sudo su dlopez Cambiese a su directorio home con el comando cd /home/dlopez/ Puede iniciar su trabajo Puede pausar y copiar los comandos del video","title":"Connecion SSH"},{"location":"Infrastructure-as-Code/Conectarse-ssh/#conecion-a-ssh-usando-gitbash","text":"Ingrese a gitbash en su instalacion local Ingrese el comando ssh ec2-user@3.234.154.133 para conectarse a la instancia de laboratorio Ingrese el password compartido Cambie a su usuario ejemplo sudo su dlopez Cambiese a su directorio home con el comando cd /home/dlopez/ Puede iniciar su trabajo Puede pausar y copiar los comandos del video","title":"Conecion a SSH usando gitbash"},{"location":"Infrastructure-as-Code/actualizar-codigo-fork/","text":"Actualizar su version del codigo Objetivo El objetivo de este lab es actualizar su version del codigo en fork a la version mas reciente de un repositorio remoto distinto al suyo Pasos Ingrese a la maquina de laboratorio ssh ec2-user@3.234.154.133 con la contrase\u00f1a compartida Cambie a su usuario sudo su enriquer Ingrese a su directorio home ejemplo cd /home/enriquer/ Clone su repositorio 'git clone https://github.com/meroman/' si no lo tiene ya clonado Verifique cuales son los repositorios remotos asociados a su repo corriendo git remote -v Agrege el repositorio original del curso como otra fuente remota git remote add upstream https://github.com/DouglasLopez/devops-foundations.git Verifique los cambios git remote -v Actualice los cambios nuevos en el repositorio original corriendo git pull upstream master Suba los cambios a su repositorio remoto con el comando git push origin master Puede copiar los comandos directamente del video","title":"Actualizar Codigo"},{"location":"Infrastructure-as-Code/actualizar-codigo-fork/#actualizar-su-version-del-codigo","text":"","title":"Actualizar su version del codigo"},{"location":"Infrastructure-as-Code/actualizar-codigo-fork/#objetivo","text":"El objetivo de este lab es actualizar su version del codigo en fork a la version mas reciente de un repositorio remoto distinto al suyo","title":"Objetivo"},{"location":"Infrastructure-as-Code/actualizar-codigo-fork/#pasos","text":"Ingrese a la maquina de laboratorio ssh ec2-user@3.234.154.133 con la contrase\u00f1a compartida Cambie a su usuario sudo su enriquer Ingrese a su directorio home ejemplo cd /home/enriquer/ Clone su repositorio 'git clone https://github.com/meroman/' si no lo tiene ya clonado Verifique cuales son los repositorios remotos asociados a su repo corriendo git remote -v Agrege el repositorio original del curso como otra fuente remota git remote add upstream https://github.com/DouglasLopez/devops-foundations.git Verifique los cambios git remote -v Actualice los cambios nuevos en el repositorio original corriendo git pull upstream master Suba los cambios a su repositorio remoto con el comando git push origin master Puede copiar los comandos directamente del video","title":"Pasos"},{"location":"Infrastructure-as-Code/labs/","text":"Laboratorios de este modulo CVS-Github Basico Terraform-AWS Terraform-AW-Bootstrap Ansible Configuration Management Docker Swarm cluster","title":"Labs"},{"location":"Infrastructure-as-Code/labs/#laboratorios-de-este-modulo","text":"CVS-Github Basico Terraform-AWS Terraform-AW-Bootstrap Ansible Configuration Management Docker Swarm cluster","title":"Laboratorios de este modulo"}]}